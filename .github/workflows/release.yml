name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  packages: write

jobs:
  build:
    name: Build ${{ matrix.name }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - name: linux-amd64
            runner: ubuntu-latest
            os: linux
            arch: amd64
          - name: darwin-arm64
            runner: macos-latest  # Apple Silicon (M1/M2)
            os: darwin
            arch: arm64
          - name: windows-amd64
            runner: windows-latest
            os: windows
            arch: amd64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          check-latest: true

      - name: Build binary
        shell: bash
        run: |
          export GOEXPERIMENT=jsonv2
          export GOTOOLCHAIN=auto
          mkdir -p dist

          # Set output binary name
          if [ "${{ matrix.os }}" = "windows" ]; then
            OUTPUT="dist/ynab-export_${{ matrix.os }}_${{ matrix.arch }}.exe"
          else
            OUTPUT="dist/ynab-export_${{ matrix.os }}_${{ matrix.arch }}"
          fi

          # Build with appropriate GOOS/GOARCH
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o "$OUTPUT" .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: binary-${{ matrix.name }}
          path: dist/*

  release:
    name: Create Release with GoReleaser
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          check-latest: true

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: binary-*
          merge-multiple: true

      - name: Display structure
        run: ls -lah dist/

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
